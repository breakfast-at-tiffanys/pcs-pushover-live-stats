name: Deploy

on:
  push:
    branches: [ main, master ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image tags
        id: vars
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "tag_sha=${IMAGE}:sha-${{ github.sha }}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF}" == "refs/heads/main" || "${GITHUB_REF}" == "refs/heads/master" ]]; then
            echo "tag_latest=${IMAGE}:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ${{ steps.vars.outputs.tag_sha }}
            ${{ steps.vars.outputs.tag_latest }}

    outputs:
      image: ${{ steps.vars.outputs.image }}
      tag_sha: ${{ steps.vars.outputs.tag_sha }}
      tag_latest: ${{ steps.vars.outputs.tag_latest }}

  deploy:
    needs: build-and-push
    # Register a self-hosted runner on your Raspberry Pi (with Docker installed)
    runs-on: [ self-hosted, linux ]
    permissions:
      contents: read
      packages: read
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        env:
          IMAGE_TAG: ${{ needs.build-and-push.outputs.tag_sha }}
        run: |
          docker pull "$IMAGE_TAG"

      - name: Stop old container (if exists)
        run: docker rm -f pcs-pushover || true

      - name: Run container
        env:
          PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
          PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
          PCS_ARGS: ${{ secrets.PCS_ARGS }}
          IMAGE_TAG: ${{ needs.build-and-push.outputs.tag_sha }}
        run: |
          docker run -d --name pcs-pushover \
            --restart unless-stopped \
            -e PUSHOVER_TOKEN -e PUSHOVER_USER \
            ${PCS_ARGS:+-e PCS_ARGS} \
            "$IMAGE_TAG"

      - name: Verify container
        run: docker ps --filter name=pcs-pushover --format '{{.Names}} {{.Status}}'
